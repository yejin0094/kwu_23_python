# 단축키 쉬프트 + 방향키
# 단축키 알트 + 방향키
# 단축키 알트 + 쉬프트 + 방향키
# 단축키 커서 + 컨트롤 + X


# 1. 자료형(Data Type)
# - 동적자료형 언어
# - python은 모두 객체 자료형
# 1) 문자열(str)     : "Hello", 'Hi'
# 2) 정수형(int)     : 3, -1, 0
# 3) 실수형(float)   : 3,14, 0.0, -2.2
# 4) 논리형(boolean) : True, False
# * 다양한 자료형을 사용하는 이유?
# -> 메모리(저장공간)을 효율적으로 사용하기 위함
#    자료형별로 저장할 수 있는 크기의 범위가 다름
# -> 데이터 구조 맞춤 저장 및 효율적인 연산
# -> 데이터 목적별 기능 제공!


# 2. 문자열형(str)
# - 다중 문자열 작성할실 때 -> ''' ''', """ """
# - 이스케이프 문자 -> \ + 문자, \t(tab), \n(한 줄 개행=enter)

# 3. 변수(variable 또는 Field)
# - 하나의 값을 저장할 수 있는 메모리(컴퓨터에서 저장할 수 있는 공간) 공간(완벽히 외우기 시험문제)
# - 문법: 변수명 대입연산자 값
# - num = 4
# - 변수만 만들고 값은 아직 안넣고 싶은 경우
# - 예: JAVA -> int num;
# - 예: python -> num = None (절대 사용하면 안됨 그냥 필요할 때마다 변수 생성)
# Tip: None 사용 금지!

# 4. 형변환(Type Casting)
# 가. int() : 정수형으로 변환
# 나. float() : 실수형으로 변환
# 다. str() : 문자열형으로 변환
# Tip
# - 작은 자료형 -> 큰 자료형 예: int -> float
# 3 -> 3.0
# - 큰 자료형 -> 작은 자료형 예: float -> int (값의 손실 조심)
# 3.14 -> 3 (0.14 손실 생김)

# 5. 상수
# - 변하지 않는 값
# - 선언 및 초기화 후 값을 변경 불가
# - 예외로 변수이름을 모두 대문자 사용
# - Python은 상수 문번 존재 X
# MAX_VALUE = 3

# Tip
# - Python은 char형(문자형) 존재 x
# - JAVA, C에서는 ''(char), ""(str)
# - python은 '', "" 모두 str형(문자열형)